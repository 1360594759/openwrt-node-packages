From 68da88559e0ba533206e214ef49ab5695d573c96 Mon Sep 17 00:00:00 2001
From: Yu Yin <xwafish@gmail.com>
Date: Tue, 28 May 2019 14:31:50 +0800
Subject: [PATCH] [mips][cleanup] Drop some dead MacroAssembler code

see https://crrev.com/c/1627548
that CL remove this functions declaration in the header file, but did not
drop function definition in the cpp file.

Bug: v8:9183
Change-Id: I98bba3664510c0a6a6a047a8b9c7c43bcc4c3962
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/1631812
Auto-Submit: Yu Yin <xwafish@gmail.com>
Reviewed-by: Jakob Kummerow <jkummerow@chromium.org>
Commit-Queue: Jakob Kummerow <jkummerow@chromium.org>
Cr-Commit-Position: refs/heads/master@{#61884}
---

diff --git a/deps/v8/src/mips/macro-assembler-mips.cc b/deps/v8/src/mips/macro-assembler-mips.cc
index 7740d61..8520aad 100644
--- a/deps/v8/src/mips/macro-assembler-mips.cc
+++ b/deps/v8/src/mips/macro-assembler-mips.cc
@@ -4976,15 +4976,6 @@
     }
 }
 
-void MacroAssembler::UntagAndJumpIfSmi(Register dst,
-                                       Register src,
-                                       Label* smi_case) {
-  UseScratchRegisterScope temps(this);
-  Register scratch = temps.Acquire();
-  JumpIfSmi(src, smi_case, scratch, USE_DELAY_SLOT);
-  SmiUntag(dst, src);
-}
-
 void TurboAssembler::JumpIfSmi(Register value, Label* smi_label,
                                Register scratch, BranchDelaySlot bd) {
   DCHECK_EQ(0, kSmiTag);
@@ -5001,19 +4992,6 @@
   Branch(bd, not_smi_label, ne, scratch, Operand(zero_reg));
 }
 
-
-void MacroAssembler::JumpIfEitherSmi(Register reg1,
-                                     Register reg2,
-                                     Label* on_either_smi) {
-  STATIC_ASSERT(kSmiTag == 0);
-  DCHECK_EQ(1, kSmiTagMask);
-  // Both Smi tags must be 1 (not Smi).
-  UseScratchRegisterScope temps(this);
-  Register scratch = temps.Acquire();
-  and_(scratch, reg1, reg2);
-  JumpIfSmi(scratch, on_either_smi);
-}
-
 void MacroAssembler::AssertNotSmi(Register object) {
   if (emit_debug_code()) {
     STATIC_ASSERT(kSmiTag == 0);
diff --git a/deps/v8/src/mips64/macro-assembler-mips64.cc b/deps/v8/src/mips64/macro-assembler-mips64.cc
index 58f283a..ff65ea8 100644
--- a/deps/v8/src/mips64/macro-assembler-mips64.cc
+++ b/deps/v8/src/mips64/macro-assembler-mips64.cc
@@ -5332,16 +5332,6 @@
   }
 }
 
-void MacroAssembler::UntagAndJumpIfSmi(Register dst,
-                                       Register src,
-                                       Label* smi_case) {
-  // DCHECK(dst!=src);
-  UseScratchRegisterScope temps(this);
-  Register scratch = temps.Acquire();
-  JumpIfSmi(src, smi_case, scratch, USE_DELAY_SLOT);
-  SmiUntag(dst, src);
-}
-
 void TurboAssembler::JumpIfSmi(Register value, Label* smi_label,
                                Register scratch, BranchDelaySlot bd) {
   DCHECK_EQ(0, kSmiTag);
@@ -5358,24 +5348,6 @@
   Branch(bd, not_smi_label, ne, scratch, Operand(zero_reg));
 }
 
-
-void MacroAssembler::JumpIfEitherSmi(Register reg1,
-                                     Register reg2,
-                                     Label* on_either_smi) {
-  STATIC_ASSERT(kSmiTag == 0);
-  // TODO(plind): Find some better to fix this assert issue.
-#if defined(__APPLE__)
-  DCHECK_EQ(1, kSmiTagMask);
-#else
-  DCHECK_EQ((int64_t)1, kSmiTagMask);
-#endif
-  // Both Smi tags must be 1 (not Smi).
-  UseScratchRegisterScope temps(this);
-  Register scratch = temps.Acquire();
-  and_(scratch, reg1, reg2);
-  JumpIfSmi(scratch, on_either_smi);
-}
-
 void MacroAssembler::AssertNotSmi(Register object) {
   if (emit_debug_code()) {
     STATIC_ASSERT(kSmiTag == 0);
